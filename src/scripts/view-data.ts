// src/scripts/view-data.ts
// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å View ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
import { query } from '../lib/database';

async function viewData(viewName: string, limit: number = 10) {
  try {
    if (!viewName) {
      console.error('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠ View');
      console.log('‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ: npx ts-node src/scripts/view-data.ts [view_name] [limit_rows]');
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ View ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      console.log('\nüìã View ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
      const viewsResult = await query(`
        SELECT table_name AS view_name
        FROM information_schema.views
        WHERE table_schema = 'public'
        ORDER BY table_name
      `);
      
      if (viewsResult.rows.length === 0) {
        console.log('‡πÑ‡∏°‡πà‡∏û‡∏ö View ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      } else {
        console.table(viewsResult.rows);
      }
      
      return;
    }

    console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å View "${viewName}"...`);
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ View ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const checkViewResult = await query(`
      SELECT EXISTS (
        SELECT FROM information_schema.views 
        WHERE table_schema = 'public' 
        AND table_name = $1
      );
    `, [viewName]);
    
    if (!checkViewResult.rows[0].exists) {
      console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö View "${viewName}" ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
      return;
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á View
    console.log(`\nüìä ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á View ${viewName}:`);
    const columnsResult = await query(`
      SELECT 
        column_name, 
        data_type,
        character_maximum_length
      FROM 
        information_schema.columns
      WHERE 
        table_schema = 'public' AND 
        table_name = $1
      ORDER BY 
        ordinal_position;
    `, [viewName]);
    
    console.table(columnsResult.rows);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô View
    console.log(`\nüìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${limit} ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡πÉ‡∏ô View ${viewName}:`);
    const dataResult = await query(`
      SELECT * FROM "${viewName}" LIMIT $1;
    `, [limit]);
    
    console.table(dataResult.rows);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô View
    const countResult = await query(`
      SELECT COUNT(*) FROM "${viewName}";
    `);
    
    console.log(`\nüìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô View ${viewName}: ${countResult.rows[0].count}`);
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Dashboard ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    if (viewName.toLowerCase().includes('dashboard')) {
      console.log('\nüìà ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:');
      const statusResult = await query(`
        SELECT device_status, COUNT(*) 
        FROM "${viewName}" 
        GROUP BY device_status;
      `);
      console.table(statusResult.rows);
    }
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  }
}

// ‡∏£‡∏±‡∏ö arguments ‡∏à‡∏≤‡∏Å command line
const viewName = process.argv[2];
const limit = parseInt(process.argv[3] || '10', 10);

// ‡∏£‡∏±‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
viewData(viewName, limit);
